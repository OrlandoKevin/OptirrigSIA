sprintf("run_%i", scenarios_final$scenarios_simulated[i])
]] %>%
mutate_at("dates", as.Date)
# PCP
pcp_current <- om[, c("dates", "P")] %>%
filter(dates <= scenarios_final$dates[i]) %>%
mutate(period = "current")
pcp_proj <- om[, c("dates", "P")] %>%
filter(
between(
as.Date(.data$dates), scenarios_final$dates[i] + 1,
scenarios_final$dates[i] + 5
)
) %>%
mutate(period = "proj")
pcp_plot <- plot(
bind_rows(pcp_current, pcp_proj),
plot_model = "ggplot",
aes = list(x = "dates", y = "P", fill = "period"),
plot_type = "bar",
show.legend = FALSE
) +
scale_fill_manual(values = c("current" = "#00a3a6", "proj" = "black")) +
# add a vertical line at the end of the current period
geom_vline(
xintercept = as.numeric(scenarios_final$dates[i]), linetype = "dashed"
) +
# Set major breaks every 5 days
scale_x_date(date_breaks = "10 days", date_labels = "%d/%m")
pcp_plot <- plot(
bind_rows(pcp_current, pcp_proj),
plot_model = "ggplot",
aes = list(x = "dates", y = "P", fill = "period"),
plot_type = "bar",
show.legend = FALSE
) +
scale_fill_manual(values = c("current" = "#00a3a6", "proj" = "#00a3a6")) +
# add a vertical line at the end of the current period
geom_vline(
xintercept = as.numeric(scenarios_final$dates[i]), linetype = "dashed"
) +
# Set major breaks every 5 days
scale_x_date(date_breaks = "10 days", date_labels = "%d/%m")
# LAI
lai_current <- om[, c("dates", "LAI")] %>%
filter(dates <= scenarios_final$dates[i]) %>%
mutate(period = "current")
lai_proj <- getClimateHorizonProjections(
scenarios_final, scenarios_final$scenario[i], scenarios_final$step[i],
vars = "LAI", i = i, outputsModel = outputsModel
)
LAI_plot <- plot(
bind_rows(lai_current, lai_proj),
plot_model = "ggplot",
aes = list(x = "dates", y = "LAI", color = "period"),
plot_type = "line",
show.legend = FALSE
) +
scale_color_manual(
values = c(
"current" = "#00a3a6", "irrig_00" = "#00a3a6", "irrig_20" = "#423089",
"irrig_30" = "#797870"
)
) +
# add a vertical line at the end of the current period
geom_vline(
xintercept = as.numeric(scenarios_final$dates[i]), linetype = "dashed"
) +
coord_cartesian(ylim = c(0, 5)) +
# Set major breaks every 5 days
scale_x_date(date_breaks = "10 days", date_labels = "%d/%m")
LAI_plot
?geom_line
LAI_plot <- plot(
bind_rows(lai_current, lai_proj),
plot_model = "ggplot",
aes = list(x = "dates", y = "LAI", color = "period"),
plot_type = "line",
show.legend = FALSE,
size = 5
) +
scale_color_manual(
values = c(
"current" = "#00a3a6", "irrig_00" = "#00a3a6", "irrig_20" = "#423089",
"irrig_30" = "#797870"
)
) +
# add a vertical line at the end of the current period
geom_vline(
xintercept = as.numeric(scenarios_final$dates[i]), linetype = "dashed"
) +
coord_cartesian(ylim = c(0, 5)) +
# Set major breaks every 5 days
scale_x_date(date_breaks = "10 days", date_labels = "%d/%m")
LAI_plot
devtools::load_all(".")
sapply(
1:10,
function(i) {
# p()
savePlots(
i = i, scenarios_final = scenarios_final,
outputsModel = outputsModel, version = version, cfg = cfg
)
}
)
devtools::load_all(".")
sapply(
1:10,
function(i) {
# p()
savePlots(
i = i, scenarios_final = scenarios_final,
outputsModel = outputsModel, version = version, cfg = cfg
)
}
)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
ru_current <- om[, c("dates", "ratio_RU12_RU12max")] %>%
filter(dates <= scenarios_final$dates[i]) %>%
mutate(period = "current")
ru_current <- om[, c("dates", "ratioRU12")] %>%
filter(dates <= scenarios_final$dates[i]) %>%
mutate(period = "current")
ru_proj <- getClimateHorizonProjections(
scenarios_final, scenarios_final$scenario[i], scenarios_final$step[i],
vars = "ratioRU12", i = i, outputsModel = outputsModel
)
RU_plot <- plot(
bind_rows(ru_current, ru_proj),
plot_model = "ggplot",
aes = list(x = "dates", y = "ratioRU12", color = "period"),
plot_type = "line",
show.legend = FALSE
) +
scale_color_manual(
values = c(
"current" = "#00a3a6", "irrig_00" = "#00a3a6", "irrig_20" = "#423089",
"irrig_30" = "#797870"
)
) +
# add a vertical line at the end of the current period
geom_vline(
xintercept = as.numeric(scenarios_final$dates[i]), linetype = "dashed"
) +
# Set major breaks every 5 days
scale_x_date(date_breaks = "10 days", date_labels = "%d/%m")
RU_plot
ru_current <- om[, c("dates", "ratioRU123pmax")] %>%
filter(dates <= scenarios_final$dates[i]) %>%
mutate(period = "current")
ru_proj <- getClimateHorizonProjections(
scenarios_final, scenarios_final$scenario[i], scenarios_final$step[i],
vars = "ratioRU123pmax", i = i, outputsModel = outputsModel
)
plot(
bind_rows(ru_current, ru_proj),
plot_model = "ggplot",
aes = list(x = "dates", y = "ratioRU123pmax", color = "period"),
plot_type = "line",
show.legend = FALSE
) +
scale_color_manual(
values = c(
"current" = "#00a3a6", "irrig_00" = "#00a3a6", "irrig_20" = "#423089",
"irrig_30" = "#797870"
)
) +
# add a vertical line at the end of the current period
geom_vline(
xintercept = as.numeric(scenarios_final$dates[i]), linetype = "dashed"
) +
# Set major breaks every 5 days
scale_x_date(date_breaks = "10 days", date_labels = "%d/%m")
devtools::load_all(".")
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
View(scenarios_final)
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
) %>%
# Get max Fin_max and PSE
filter(PSE_factor == max(PSE_factor), Fin_max == max(Fin_max))
View(test)
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(test)
ecdf_RU <- ecdf(scenarios_final$RU)
plot(ecdf_RU())
plot(ecdf_RU
)
ecdf_RU <- ecdf(scenarios_final$RU)
ru_cdf <- ecdf(scenarios_final$RU)
?ecdf
plot(ecdf(scenarios_final$RU))
plot(scenarios_final %>% select(RU), plot_model = "ggplot", plot_type = "ecdf")
scenarios_final <- scenarios_final %>%
mutate(niveau_RU = ifelse(
ratio_RU12_RU12max[i] > 0.7, 1,
ifelse(ratio_RU12_RU12max[i] > 0.5, 2, 3)
))
scenarios_final <- scenarios_final %>%
mutate(niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
))
for (i in seq.int(nrow(scenarios_final))) {
scenarios_final$PSE_factor[i] <- calcPSEFactor(
niveau_RU = scenarios_final$niveau_RU[i],
niveau_restriction = scenarios_final$niveau_restriction[i]
)
}
scenarios_final <- scenarios_final %>%
mutate(niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = niveau_RU,
niveau_restriction = niveau_restriction
))
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
mutate(niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = niveau_RU,
niveau_restriction = niveau_restriction
))
scenarios_final <- scenarios_final %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(test)
View(scenarios_final)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.8, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(scenarios_final)
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(test)
cdf(scenarios_final$ratio_RU12_RU12max)
ecdf(scenarios_final$ratio_RU12_RU12max)
plot(ecdf(scenarios_final$ratio_RU12_RU12max))
plot(ecdf(scenarios_final$ratio_RU_RUmax))
plot(ecdf(scenarios_final$ratio_RU12_RU12max))
View(scenarios_final %>% group_by(niveau_restriction) %>% summarise(nb = sum(PSE_factor)))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.75, 1,
ifelse(ratio_RU12_RU12max > 0.5, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(test)
unique(test$PSE_factor)
View(scenarios_final)
length(unique(test$PSE_factor))
plot(ecdf(scenarios_final$ratio_RU12_RU12max))
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.75, 1,
ifelse(ratio_RU12_RU12max > 0.4, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
unique(test$PSE_factor)
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.75, 1,
ifelse(ratio_RU12_RU12max > 0.4, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
unique(test$PSE_factor)
View(scenarios_final)
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.75, 1,
ifelse(ratio_RU12_RU12max > 0.4, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
unique(test$PSE_factor)
View(scenarios_final)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.4, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(scenarios_final)
devtools::load_all(".")
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.4, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
View(scenarios_final)
View(scenarios_final)
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(test)
devtools::load_all(".")
test <- createMainDatasets(write_results = TRUE)
scenarios_final <- scenarios_final %>%
rowwise() %>%
mutate(
niveau_RU = ifelse(
ratio_RU12_RU12max > 0.7, 1,
ifelse(ratio_RU12_RU12max > 0.4, 2, 3)
),
PSE_factor = calcPSEFactor(
niveau_RU = .data$niveau_RU,
niveau_restriction = .data$niveau_restriction
)
) %>%
ungroup()
test <- scenarios_final %>%
group_by(scenario) %>%
summarise(
PSE_factor = sum(PSE_factor, na.rm = TRUE),
Fin_max = first(Fin_max),
.groups = "drop"
)
View(test)
unique(test$PSE_factor)
View(scenarios_final)
View(scenarios_final)
View(test)
plot(ecdf(test$PSE_factor))
plot(y = ecdf(test$PSE_factor))
plot(ecdf(test$PSE_factor))
plot(ecdf(scenarios_final$ratio_RU12_RU12max))
plot(ecdf(test$PSE_factor))
